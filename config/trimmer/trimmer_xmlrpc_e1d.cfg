
# ************************** BACKUPS' DIRECTORY DATA **************************
[dir]

# BKP_PATH = the path where you want the program to clean the backups. It
# cannot be empty.
bkp_path: /opt/backups/pg_backups/xmlrpc/

# **************************** BACKUPS' FILE DATA *****************************
[file]

# PREFIX = the prefix which must have the backups you want to clean. This field
# can be empty if you want to clean all the backups of each selected database.
prefix:

# ********************* DATABASES TO CLEAN THEIR BACKUPS **********************
[includes]

# IN_DBS = the list of the databases' names which you want to clean their
# backups. They must be separated by commas if you specify more than one. If
# you want to clean backups of all databases, you can write *. If you do not
# want to specify a list, you can leave this field empty.
in_dbs:
# IN_REGEX = a regular expression which indicates the databases'names you want
# to clean their backups. You can combine this one with a list of databases'
# names (IN_DBS) and the result will be the addition of both. Can be empty too.
in_regex: (devel)+.*
# IN_PRIORITY = a flag which determinates whether or not the include conditions
# must have priority over the exclude ones. Must be True or False.
in_priority: False

# ******************* DATABASES NOT TO CLEAN THEIR BACKUPS ********************
[excludes]

# EX_DBS = the list of the databases' names which you do not want to clean
# their backups. They must be separated by commas if you specify more than one.
# If you do not want to clean any database's backups, you can write *. If you
# do not want to specify a list, you can leave this field empty.
ex_dbs:
# EX_REGEX = a regular expression which indicates the databases'names you do
# not want to clean their backups. You can combine this one with a list of
# databases' names (EX_DBS) and the result will be the addition of both. Can be
# empty too.
ex_regex:

# **************************** BACKUPS' CONDITIONS ****************************
[conditions]
# MIN_BKPS = minimum number of backups which you want the specified databases
# to have. This way, even though they are obsolete, they will not be removed.
min_n_bkps: 8
# OBS_DAYS = number of days which have to be passed after its creation to
# consider a backup file obsolete, and therefore, can be removed. May be some
# backups which are obsolete will not be removed because of the minimum number
# of backups you want to be available (MIN_BKPS).
exp_days: 0
# MAX_TSIZE = you have to fill in this attribute in order to be noticed when a
# database's group of backups exceeds this size you have established. This size
# can be in Megabytes (MB), Gigabytes (GB), Terabytes (TB) or Petabytes (PB).
# Write the unit of measurement just next to the quantity (without spaces).
max_size: 4GB

# *************************** OTHER SPECIFICATIONS ****************************
[other]
# PG_WARNINGS = set this attribute to True if you want to know which PostgreSQL
# databases do not have any backups and which backups are not related to any
# PostgreSQL databases. So this property must be True or False.
pg_warnings: True